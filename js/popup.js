const loginContainer=document.getElementById("login-container"),mainContainer=document.getElementById("main-container"),passwordInput=document.getElementById("password-input"),loginButton=document.getElementById("login-button"),loginError=document.getElementById("login-error"),tabActivation=document.getElementById("tab-activation"),tabFilter=document.getElementById("tab-filter"),tabLog=document.getElementById("tab-log"),editor=document.getElementById("editor"),fetchButton=document.getElementById("fetch-button"),saveButton=document.getElementById("save-button"),modifiedIndicator=document.getElementById("modified-indicator"),statusMessage=document.getElementById("status-message"),loadingOverlay=document.getElementById("loading-overlay"),loadingText=document.getElementById("loading-text"),ADMIN_PASSWORD_HASH="ce128f7610a0084dd96fa34e4bf184caf251eeef0838cacecf7d8d8c09586298",SALT="d9e1b";let currentTab="activation",isModified=!1,editorOriginalContent="";const tabFileMap={activation:{fileName:"Permission.txt",content:"",sha:"",fileExists:!0},filter:{fileName:"README.md",content:"",sha:"",fileExists:!0},log:{fileName:"log.txt",content:"",sha:"",fileExists:!0}};function showLoading(t="加载中..."){loadingText.textContent=t,loadingOverlay.classList.remove("hidden")}function hideLoading(){loadingOverlay.classList.add("hidden")}function showStatus(t,e=!1){statusMessage.textContent=t,statusMessage.style.color=e?"#d32f2f":"rgb(108, 174, 194)",setTimeout((()=>{statusMessage.textContent=""}),3e3)}function clearStatus(){statusMessage.textContent=""}function switchToMainInterface(){loginContainer.classList.add("hidden"),mainContainer.classList.remove("hidden")}function markAsModified(){isModified||(isModified=!0,modifiedIndicator.classList.remove("hidden"))}function markAsUnmodified(){isModified=!1,modifiedIndicator.classList.add("hidden")}function updateEditorStyle(){editor.classList.remove("filter-mode"),"filter"===currentTab&&editor.classList.add("filter-mode")}function updateEditorContent(){editor.value=tabFileMap[currentTab].content,editorOriginalContent=editor.value,saveButton.disabled=!tabFileMap[currentTab].fileExists,markAsUnmodified()}function switchTab(t){switch(tabActivation.classList.remove("active"),tabFilter.classList.remove("active"),tabLog.classList.remove("active"),t){case"activation":tabActivation.classList.add("active");break;case"filter":tabFilter.classList.add("active");break;case"log":tabLog.classList.add("active");break}currentTab=t,updateEditorStyle(),clearStatus(),updateEditorContent()}async function fetchFileFromGitHub(){showLoading("获取中..."),fetchButton.disabled=!0,saveButton.disabled=!0;try{const t=await window.GitHubAPI.getFileContent(currentTab);if(!t.fileExists)return saveButton.disabled=!0,showStatus(`文件 ${tabFileMap[currentTab].fileName} 不存在，无法保存`,!0),editor.value="",editorOriginalContent="",tabFileMap[currentTab].content="",tabFileMap[currentTab].sha="",void(tabFileMap[currentTab].fileExists=!1);tabFileMap[currentTab].content=t.content,tabFileMap[currentTab].sha=t.sha,tabFileMap[currentTab].fileExists=!0,updateEditorContent(),showStatus("获取成功")}catch(t){showStatus(`获取失败: ${t.message}`,!0)}finally{fetchButton.disabled=!1,hideLoading()}}async function saveFileToGitHub(){if(editor.value.trim())if(!1!==tabFileMap[currentTab].fileExists){showLoading("保存中..."),fetchButton.disabled=!0,saveButton.disabled=!0;try{const t=await window.GitHubAPI.updateFileContent(tabFileMap[currentTab].fileName,editor.value,tabFileMap[currentTab].sha);tabFileMap[currentTab].content=editor.value,tabFileMap[currentTab].sha=t.sha,tabFileMap[currentTab].fileExists=!0,editorOriginalContent=editor.value,showStatus("保存成功"),markAsUnmodified()}catch(t){showStatus(`保存失败: ${t.message}`,!0)}finally{fetchButton.disabled=!1,saveButton.disabled=!1,hideLoading()}}else showStatus(`文件 ${tabFileMap[currentTab].fileName} 不存在，无法保存`,!0);else showStatus("无内容可保存",!0)}function showError(t){loginError.textContent=t,loginError.style.color="#d32f2f"}function clearError(){loginError.textContent=""}async function verifyPassword(t){try{const e=t+SALT,i=(new TextEncoder).encode(e),a=await crypto.subtle.digest("SHA-256",i);return Array.from(new Uint8Array(a)).map((t=>t.toString(16).padStart(2,"0"))).join("")===ADMIN_PASSWORD_HASH}catch(t){return!1}}loginButton.addEventListener("click",(()=>{const t=passwordInput.value;verifyPassword(t).then((e=>{e?(sessionStorage.setItem("auth_key",t),clearError(),switchToMainInterface(),passwordInput.value=""):(showError("密码错误，请重试"),passwordInput.value="")}))})),passwordInput.addEventListener("keypress",(t=>{"Enter"===t.key&&loginButton.click()})),tabActivation.addEventListener("click",(()=>{isModified?confirm("当前有未保存的修改，切换标签页将丢失这些修改。是否继续？")&&switchTab("activation"):switchTab("activation")})),tabFilter.addEventListener("click",(()=>{isModified?confirm("当前有未保存的修改，切换标签页将丢失这些修改。是否继续？")&&switchTab("filter"):switchTab("filter")})),tabLog.addEventListener("click",(()=>{isModified?confirm("当前有未保存的修改，切换标签页将丢失这些修改。是否继续？")&&switchTab("log"):switchTab("log")})),editor.addEventListener("input",(()=>{editor.value!==editorOriginalContent?markAsModified():markAsUnmodified()})),fetchButton.addEventListener("click",fetchFileFromGitHub),saveButton.addEventListener("click",saveFileToGitHub),document.addEventListener("DOMContentLoaded",(()=>{loginContainer.classList.remove("hidden"),mainContainer.classList.add("hidden"),switchTab("activation")}));